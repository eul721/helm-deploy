---
{{- range $ingress := .Values.ingresses }}
apiVersion: networking.k8s.io/v1beta1 # must be beta until k8s 1.19
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443},{"HTTP":80}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{ "Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301" } }'
    alb.ingress.kubernetes.io/group.name: {{ $.Values.project }}-{{ required "Must declare branch name." $.Values.branch }}
    alb.ingress.kubernetes.io/scheme: {{ .scheme }}
    {{- $full_sgs := list -}}
    {{- range .security_groups -}}
    {{-   $full_sgs = printf "%s-%s" $.Values.vpc . | append $full_sgs -}}
    {{- end }}
    {{- range .external_to_vpc_sgs -}}
    {{-  $full_sgs = . | append $full_sgs -}}
    {{- end }}
    alb.ingress.kubernetes.io/security-groups: {{ join ", " $full_sgs }}
    alb.ingress.kubernetes.io/tags: Project={{ $.Values.project }}
    alb.ingress.kubernetes.io/target-type: instance
  name: {{ $.Release.Name }}
  namespace: {{ $.Release.Namespace }}
  labels:
{{ include "pod_labels" $ | indent 4 }}
spec:
  rules:
  - host: "{{ $.Release.Name }}{{ if eq $ingress.scheme "internal" }}-internal{{ end }}.{{ $.Values.hostname }}"
    http:
      paths:
      - path: /*
        backend:
          serviceName: ssl-redirect
          servicePort: use-annotation
      - path: /*
        backend:
          serviceName: {{ $.Release.Name }}-svc
          servicePort: {{ $.Values.service.port }}
---
{{- end }}