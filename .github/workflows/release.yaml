name: release

on:
  release:
    types: [published]

jobs:
  docs:
    name: Publish docs
    runs-on: [self-hosted, linux]

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses:  actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://npm.pkg.github.com/"
          scope: take-two-t2gp
      - name: "Install dependencies"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.T2GP_BUILD_TOKEN }}
        run: npm ci
      - name: "document generation"
        run: npm run doc
      - name: Get version
        run:
          echo VER=${{ github.event.release.tag_name }} >> $GITHUB_ENV
      - name: "sync to S3 (tag)"
        uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: t2gp-documentation
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2"
          SOURCE_DIR: "docs"
          DEST_DIR: "t2gp-publisher-service/${{ env.VER }}"
      - name: "sync to S3 (latest)"
        uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: t2gp-documentation
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2"
          SOURCE_DIR: "docs"
          DEST_DIR: "t2gp-publisher-service/latest"
      - name: build image
        run: |
          docker build -t t2gp-publisher-service --build-arg NPM_TOKEN="${{ secrets.T2GP_BUILD_TOKEN }}" .
      - name: push to ECR
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-1
          local-image: t2gp-publisher-service
          image: t2gp-publisher-service:${{ env.VER }}
      - name: clean up
        run: docker image prune -a --force --filter "until=48h"
